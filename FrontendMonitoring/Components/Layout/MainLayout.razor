@inherits LayoutComponentBase

<MudThemeProvider Theme="@_theme" IsDarkMode="_isDarkMode" />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />
<MudLayout>
    <MudAppBar Elevation="1">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <MudText Typo="Typo.h5" Class="ml-3 text-responsive-h5">Application</MudText>
        <MudSpacer />
        <MudIconButton Icon="@(DarkLightModeButtonIcon)" Color="Color.Inherit" OnClick="@DarkModeToggle" />
        <MudMenu Icon="@Icons.Material.Filled.MoreVert" Color="Color.Inherit" Edge="Edge.End">
            <MudMenuItem Href="about">
                <MudIcon Icon="@Icons.Material.Filled.Info" Class="me-2" />
                Over
            </MudMenuItem>
            <MudMenuItem Href="privacy">
                <MudIcon Icon="@Icons.Material.Filled.PrivacyTip" Class="me-2" />
                Privacy
            </MudMenuItem>
            <MudMenuItem Href="faq">
                <MudIcon Icon="@Icons.Material.Filled.QuestionAnswer" Class="me-2" />
                FAQ
            </MudMenuItem>
        </MudMenu>

    </MudAppBar>    <MudDrawer id="nav-drawer" @bind-Open="_drawerOpen" ClipMode="@_drawerClipMode" Elevation="2" Variant="@_drawerVariant">
        <NavMenu />

    </MudDrawer>
    <MudMainContent Class="responsive-padding">
        <LeafletScripts />
        <div class="page fade-in">
            @Body
        </div>
    </MudMainContent>
</MudLayout>


<div id="blazor-error-ui" data-nosnippet>
    An unhandled error has occurred.
    <a href="." class="reload">Reload</a>
    <span class="dismiss">🗙</span>
</div>

@code {
    private bool _drawerOpen = true;
    private bool _isDarkMode = true;
    private MudTheme? _theme = null;
    private DrawerClipMode _drawerClipMode = DrawerClipMode.Always;
    private DrawerVariant _drawerVariant = DrawerVariant.Mini;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        _theme = new()
            {
                PaletteLight = _lightPalette,
                PaletteDark = _darkPalette,
                LayoutProperties = new LayoutProperties()
            };

        // Set mobile-responsive drawer behavior
        SetDrawerBehavior();
    }

    private void SetDrawerBehavior()
    {
        // For mobile screens, use temporary drawer that overlays content
        // For desktop, use persistent drawer
        _drawerClipMode = DrawerClipMode.Always;
        _drawerVariant = DrawerVariant.Responsive;
        _drawerOpen = true; // Start open on desktop, will auto-close on mobile
    }

    private void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    private void DarkModeToggle()
    {
        _isDarkMode = !_isDarkMode;
    }

    private readonly PaletteLight _lightPalette = new()
        {
            Black = "#110e2d",
            AppbarText = "#424242",
            AppbarBackground = "rgba(255,255,255,0.8)",
            DrawerBackground = "#ffffff",
            GrayLight = "#e8e8e8",
            GrayLighter = "#f9f9f9",
        };

    private readonly PaletteDark _darkPalette = new()
        {
            Primary = "#7e6fff",
            Surface = "#1e1e2d",
            Background = "#1a1a27",
            BackgroundGray = "#151521",
            AppbarText = "#92929f",
            AppbarBackground = "rgba(26,26,39,0.8)",
            DrawerBackground = "#1a1a27",
            ActionDefault = "#74718e",
            ActionDisabled = "#9999994d",
            ActionDisabledBackground = "#605f6d4d",
            TextPrimary = "#b2b0bf",
            TextSecondary = "#92929f",
            TextDisabled = "#ffffff33",
            DrawerIcon = "#92929f",
            DrawerText = "#92929f",
            GrayLight = "#2a2833",
            GrayLighter = "#1e1e2d",
            Info = "#4a86ff",
            Success = "#3dcb6c",
            Warning = "#ffb545",
            Error = "#ff3f5f",
            LinesDefault = "#33323e",
            TableLines = "#33323e",
            Divider = "#292838",
            OverlayLight = "#1e1e2d80",
        };

    public string DarkLightModeButtonIcon => _isDarkMode switch
    {
        true => Icons.Material.Rounded.AutoMode,
        false => Icons.Material.Outlined.DarkMode,
    };
}


