@page "/statistics"
@using FrontendMonitoring.Models
@using Microsoft.AspNetCore.Components.Web
@using MudBlazor

<PageTitle>Statistieken</PageTitle>

@if (_isLoading)
{
    <MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="pa-6">
        <MudPaper Elevation="0" Class="loading-screen">
            <MudStack AlignItems="AlignItems.Center" Justify="Justify.Center" Spacing="4" Style="min-height: 60vh;">
                <MudProgressCircular Color="Color.Primary" Size="Size.Large" Indeterminate="true" Class="loading-spinner-main" />
                <MudStack AlignItems="AlignItems.Center" Spacing="2">
                    <MudText Typo="Typo.h6" Style="font-weight: 600;">Statistieken worden geladen...</MudText>
                    <MudText Typo="Typo.body2" Style="opacity: 0.7;">Even geduld, we verzamelen de data voor u</MudText>
                </MudStack>
                <MudStack Spacing="2" Style="width: 100%; max-width: 600px;">
                    <MudSkeleton Width="100%" Height="80px" Animation="Animation.Wave" />
                    <MudStack Row="true" Spacing="2">
                        <MudSkeleton Width="48%" Height="120px" Animation="Animation.Wave" />
                        <MudSkeleton Width="48%" Height="120px" Animation="Animation.Wave" />
                    </MudStack>
                    <MudSkeleton Width="100%" Height="200px" Animation="Animation.Wave" />
                </MudStack>
            </MudStack>
        </MudPaper>
    </MudContainer>
}
else
{

<MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="pa-6">    <MudPaper Elevation="3" Class="pa-8 mb-6" Style="border-radius: 20px; background: linear-gradient(135deg, var(--mud-palette-primary), var(--mud-palette-primary-darken)); color: white; position: relative; overflow: hidden;">
        <MudStack Spacing="4">
            <MudStack Row="true" AlignItems="AlignItems.Center" Justify="Justify.SpaceBetween">
                <MudStack Row="true" AlignItems="AlignItems.Center" Spacing="3">
                    <MudIcon Icon="@Icons.Material.Filled.Analytics" Style="font-size: 3rem; opacity: 0.9;" />
                    <MudStack Spacing="1">
                        <MudText Typo="Typo.h3" Style="font-weight: 700; margin: 0;">
                            Afvaldetectie Statistieken
                        </MudText>
                        <MudText Typo="Typo.subtitle1" Style="opacity: 0.9; margin: 0;">
                            Uitgebreide analyses en inzichten van ons AI-aangedreven afvalmonitoringsysteem
                        </MudText>
                    </MudStack>
                </MudStack>
                <MudButton Variant="Variant.Text" 
                          Color="Color.Surface" 
                          OnClick="RefreshData" 
                          StartIcon="@(_isRefreshing ? Icons.Material.Filled.Refresh : Icons.Material.Filled.Refresh)"
                          Disabled="_isRefreshing"
                          Class="filter-button"
                          Style="background: rgba(255,255,255,0.1); border: 1px solid rgba(255,255,255,0.2);">
                    @if (_isRefreshing)
                    {
                        <div class="refresh-button-loading">
                            <MudProgressCircular Size="Size.Small" Indeterminate="true" Class="loading-spinner" Style="color: white;" />
                            <span style="color: white;">Laden...</span>
                        </div>
                    }
                    else
                    {
                        <span style="color: white;">Verversen</span>
                    }
                </MudButton>
            </MudStack>
        </MudStack>
        <div style="position: absolute; top: -30px; right: -30px; width: 150px; height: 150px; background: rgba(255,255,255,0.1); border-radius: 50%; z-index: 0;"></div>
    </MudPaper><MudAlert Severity="Severity.Info" 
              Variant="Variant.Filled" 
              Class="mb-6" 
              Style="border-radius: 16px; border-left: 6px solid var(--mud-palette-info-darken);">
        <MudStack Row="true" AlignItems="AlignItems.Center" Spacing="2">
            <MudIcon Icon="@Icons.Material.Filled.Info" />
            <MudText Style="margin: 0;">
                De volgende statistieken zijn gebaseerd op gegevens van de geobserveerde afvaldetecties in Breda en worden regelmatig bijgewerkt.
            </MudText>
        </MudStack>
    </MudAlert>    <MudPaper Elevation="2" Class="pa-4 mb-6" Style="border-radius: 16px; border-left: 6px solid var(--mud-palette-primary);">
        <MudStack Row="true" AlignItems="AlignItems.Center" Spacing="2">
            <MudIcon Icon="@Icons.Material.Filled.TrendingUp" Color="Color.Primary" Style="font-size: 1.5rem;" />
            <MudText Typo="Typo.h5" Style="font-weight: 600; margin: 0;">Huidige Statistieken</MudText>
        </MudStack>
    </MudPaper>
    
    <MudGrid Spacing="4" Class="mb-8">        <MudItem xs="12" sm="6" lg="3">
            <MudPaper Elevation="4" Class="pa-6 text-center" Style="border-radius: 20px; background: linear-gradient(135deg, var(--mud-palette-primary), var(--mud-palette-primary-lighten)); color: white; position: relative; overflow: hidden; min-height: 180px;">
                <MudStack AlignItems="AlignItems.Center" Spacing="3">
                    <MudIcon Icon="@Icons.Material.Filled.DeleteSweep" Style="font-size: 3rem; opacity: 0.9;" />
                    <MudStack AlignItems="AlignItems.Center" Spacing="1">
                        @if (_isRefreshing)
                        {
                            <MudSkeleton Width="60%" Height="40px" Animation="Animation.Wave" Class="loading-skeleton-white" />
                        }
                        else
                        {
                            <MudText Typo="Typo.h3" Style="font-weight: 700; margin: 0;">@detections.Count</MudText>
                        }
                        <MudText Typo="Typo.h6" Style="font-weight: 600; opacity: 0.9; margin: 0;">Totale Detecties</MudText>
                        <MudText Typo="Typo.body2" Style="opacity: 0.8; margin: 0;">Totaal ontvangen</MudText>
                    </MudStack>
                </MudStack>
                <div style="position: absolute; top: -20px; right: -20px; width: 80px; height: 80px; background: rgba(255,255,255,0.1); border-radius: 50%;"></div>
            </MudPaper>
        </MudItem>
        <MudItem xs="12" sm="6" lg="3">
            <MudPaper Elevation="4" Class="pa-6 text-center" Style="border-radius: 20px; background: linear-gradient(135deg, var(--mud-palette-success), var(--mud-palette-success-lighten)); color: white; position: relative; overflow: hidden; min-height: 180px;">
                <MudStack AlignItems="AlignItems.Center" Spacing="3">
                    <MudIcon Icon="@Icons.Material.Filled.BarChart" Style="font-size: 3rem; opacity: 0.9;" />
                    <MudStack AlignItems="AlignItems.Center" Spacing="1">
                        @if (_isRefreshing)
                        {
                            <MudSkeleton Width="80%" Height="30px" Animation="Animation.Wave" Class="loading-skeleton-white" />
                        }
                        else
                        {
                            <MudText Typo="Typo.h4" Style="font-weight: 700; margin: 0; font-size: 1.5rem;">@MostCommonTrashType</MudText>
                        }
                        <MudText Typo="Typo.h6" Style="font-weight: 600; opacity: 0.9; margin: 0;">Meest Voorkomend</MudText>
                        <MudText Typo="Typo.body2" Style="opacity: 0.8; margin: 0;">Afvaltype</MudText>
                    </MudStack>
                </MudStack>
                <div style="position: absolute; top: -20px; right: -20px; width: 80px; height: 80px; background: rgba(255,255,255,0.1); border-radius: 50%;"></div>
            </MudPaper>
        </MudItem>
        <MudItem xs="12" sm="6" lg="3">
            <MudPaper Elevation="4" Class="pa-6 text-center" Style="border-radius: 20px; background: linear-gradient(135deg, var(--mud-palette-warning), var(--mud-palette-warning-lighten)); color: white; position: relative; overflow: hidden; min-height: 180px;">
                <MudStack AlignItems="AlignItems.Center" Spacing="3">
                    <MudIcon Icon="@Icons.Material.Filled.LocationOn" Style="font-size: 3rem; opacity: 0.9;" />
                    <MudStack AlignItems="AlignItems.Center" Spacing="1">
                        @if (_isRefreshing)
                        {
                            <MudSkeleton Width="70%" Height="30px" Animation="Animation.Wave" Class="loading-skeleton-white" />
                        }
                        else
                        {
                            <MudTooltip Text="@TopLocation">
                                <MudText Typo="Typo.h4" Style="font-weight: 700; margin: 0; font-size: 1.5rem; max-width: 150px; overflow: hidden; text-overflow: ellipsis; white-space: nowrap;">@ShortLocation</MudText>
                            </MudTooltip>
                        }
                        <MudText Typo="Typo.h6" Style="font-weight: 600; opacity: 0.9; margin: 0;">Top Locatie</MudText>
                        <MudText Typo="Typo.body2" Style="opacity: 0.8; margin: 0;">Meeste meldingen</MudText>
                    </MudStack>
                </MudStack>
                <div style="position: absolute; top: -20px; right: -20px; width: 80px; height: 80px; background: rgba(255,255,255,0.1); border-radius: 50%;"></div>
            </MudPaper>
        </MudItem>
        <MudItem xs="12" sm="6" lg="3">
            <MudPaper Elevation="4" Class="pa-6 text-center" Style="border-radius: 20px; background: linear-gradient(135deg, var(--mud-palette-info), var(--mud-palette-info-lighten)); color: white; position: relative; overflow: hidden; min-height: 180px;">
                <MudStack AlignItems="AlignItems.Center" Spacing="3">
                    <MudIcon Icon="@Icons.Material.Filled.Timeline" Style="font-size: 3rem; opacity: 0.9;" />
                    <MudStack AlignItems="AlignItems.Center" Spacing="1">
                        @if (_isRefreshing)
                        {
                            <MudSkeleton Width="50%" Height="40px" Animation="Animation.Wave" Class="loading-skeleton-white" />
                        }
                        else
                        {
                            <MudText Typo="Typo.h3" Style="font-weight: 700; margin: 0;">@AverageConfidence.ToString("P0")</MudText>
                        }
                        <MudText Typo="Typo.h6" Style="font-weight: 600; opacity: 0.9; margin: 0;">Gem. Vertrouwen</MudText>
                        <MudText Typo="Typo.body2" Style="opacity: 0.8; margin: 0;">AI Score</MudText>
                    </MudStack>
                </MudStack>
                <div style="position: absolute; top: -20px; right: -20px; width: 80px; height: 80px; background: rgba(255,255,255,0.1); border-radius: 50%;"></div>
            </MudPaper>
        </MudItem>
    </MudGrid>    <MudPaper Elevation="2" Class="pa-4 mb-6" Style="border-radius: 16px; border-left: 6px solid var(--mud-palette-secondary);">
        <MudStack Row="true" AlignItems="AlignItems.Center" Spacing="2">
            <MudIcon Icon="@Icons.Material.Filled.CalendarToday" Color="Color.Secondary" Style="font-size: 1.5rem;" />
            <MudText Typo="Typo.h5" Style="font-weight: 600; margin: 0;">Detecties per Dag</MudText>
        </MudStack>
    </MudPaper>
      <MudPaper Elevation="4" Class="pa-6 mb-8" Style="border-radius: 20px; background: var(--mud-palette-surface);">
        <MudTable Items="@DailyStats" 
                 Dense="false" 
                 Hover="true" 
                 Bordered="false" 
                 Striped="false" 
                 Elevation="0"
                 Loading="_isRefreshing"
                 LoadingProgressColor="Color.Primary"
                 Style="border-radius: 12px; overflow: hidden;">
            <LoadingContent>
                <div class="table-loading">
                    <MudProgressCircular Color="Color.Primary" Size="Size.Medium" Indeterminate="true" />
                    <MudText Typo="Typo.h6" Class="table-loading-text">Data wordt ververst...</MudText>
                    <div class="data-viz-skeleton">
                        <MudSkeleton Width="100%" Height="40px" Animation="Animation.Wave" />
                        <MudSkeleton Width="90%" Height="40px" Animation="Animation.Wave" />
                        <MudSkeleton Width="95%" Height="40px" Animation="Animation.Wave" />
                    </div>
                </div>
            </LoadingContent>
            <HeaderContent>
                <MudTh Style="background: var(--mud-palette-primary); color: white; font-weight: 600; padding: 16px;">
                    <MudStack Row="true" AlignItems="AlignItems.Center" Spacing="1">
                        <MudIcon Icon="@Icons.Material.Filled.CalendarToday" Size="Size.Small" />
                        <span>Datum</span>
                    </MudStack>
                </MudTh>
                <MudTh Style="background: var(--mud-palette-primary); color: white; font-weight: 600; padding: 16px;">
                    <MudStack Row="true" AlignItems="AlignItems.Center" Spacing="1">
                        <MudIcon Icon="@Icons.Material.Filled.TrendingUp" Size="Size.Small" />
                        <span>Aantal</span>
                    </MudStack>
                </MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Datum" Style="padding: 16px; font-weight: 500;">
                    @context.Date.ToShortDateString()
                </MudTd>
                <MudTd DataLabel="Aantal" Style="padding: 16px;">
                    <MudStack AlignItems="AlignItems.Start" Spacing="2">
                        <MudProgressLinear Color="Color.Primary" 
                                         Value="@((double)context.Count / (double)MaxDailyCount * 100)" 
                                         Style="height: 12px; border-radius: 6px; width: 200px;" />
                        <MudChip T="string" Color="Color.Primary" Variant="Variant.Filled" Size="Size.Small" Style="font-weight: 600;">
                            @context.Count
                        </MudChip>
                    </MudStack>
                </MudTd>
            </RowTemplate>
            <NoRecordsContent>
                <MudStack AlignItems="AlignItems.Center" Spacing="2" Class="pa-8">
                    <MudIcon Icon="@Icons.Material.Filled.SearchOff" Style="font-size: 3rem; color: var(--mud-palette-text-secondary);" />
                    <MudText Typo="Typo.h6" Style="color: var(--mud-palette-text-secondary);">Geen data beschikbaar</MudText>
                </MudStack>
            </NoRecordsContent>
        </MudTable>
    </MudPaper>    <MudPaper Elevation="2" Class="pa-4 mb-6" Style="border-radius: 16px; border-left: 6px solid var(--mud-palette-info);">
        <MudStack Row="true" AlignItems="AlignItems.Center" Spacing="2">
            <MudIcon Icon="@Icons.Material.Filled.Psychology" Color="Color.Info" Style="font-size: 1.5rem;" />
            <MudText Typo="Typo.h5" Style="font-weight: 600; margin: 0;">Gemiddelde Vertrouwen per Dag</MudText>
        </MudStack>
    </MudPaper>
      <MudPaper Elevation="4" Class="pa-6 mb-8" Style="border-radius: 20px; background: var(--mud-palette-surface);">
        <MudTable Items="@DailyConfidenceStats" 
                 Dense="false" 
                 Hover="true" 
                 Bordered="false" 
                 Striped="false" 
                 Elevation="0"
                 Loading="_isRefreshing"
                 LoadingProgressColor="Color.Info"
                 Style="border-radius: 12px; overflow: hidden;">
            <LoadingContent>
                <div class="table-loading">
                    <MudProgressCircular Color="Color.Info" Size="Size.Medium" Indeterminate="true" />
                    <MudText Typo="Typo.h6" Class="table-loading-text">Vertrouwensdata wordt geladen...</MudText>
                    <div class="data-viz-skeleton">
                        <MudSkeleton Width="100%" Height="40px" Animation="Animation.Wave" />
                        <MudSkeleton Width="85%" Height="40px" Animation="Animation.Wave" />
                        <MudSkeleton Width="95%" Height="40px" Animation="Animation.Wave" />
                    </div>
                </div>
            </LoadingContent>
            <HeaderContent>
                <MudTh Style="background: var(--mud-palette-info); color: white; font-weight: 600; padding: 16px;">
                    <MudStack Row="true" AlignItems="AlignItems.Center" Spacing="1">
                        <MudIcon Icon="@Icons.Material.Filled.CalendarToday" Size="Size.Small" />
                        <span>Datum</span>
                    </MudStack>
                </MudTh>
                <MudTh Style="background: var(--mud-palette-info); color: white; font-weight: 600; padding: 16px;">
                    <MudStack Row="true" AlignItems="AlignItems.Center" Spacing="1">
                        <MudIcon Icon="@Icons.Material.Filled.Psychology" Size="Size.Small" />
                        <span>Gem. Vertrouwen</span>
                    </MudStack>
                </MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Datum" Style="padding: 16px; font-weight: 500;">
                    @context.Date.ToShortDateString()
                </MudTd>
                <MudTd DataLabel="Gem. Vertrouwen" Style="padding: 16px;">
                    <MudStack Row="true" AlignItems="AlignItems.Center" Spacing="3">
                        <MudProgressCircular Color="@GetConfidenceColor(context.AvgConfidence)" 
                                           Value="@((int)(context.AvgConfidence * 100))" 
                                           Size="Size.Medium" />
                        <MudChip T="string" Color="@GetConfidenceColor(context.AvgConfidence)" Variant="Variant.Filled" Size="Size.Small" Style="font-weight: 600;">
                            @context.AvgConfidence.ToString("P0")
                        </MudChip>
                    </MudStack>
                </MudTd>
            </RowTemplate>
            <NoRecordsContent>
                <MudStack AlignItems="AlignItems.Center" Spacing="2" Class="pa-8">
                    <MudIcon Icon="@Icons.Material.Filled.SearchOff" Style="font-size: 3rem; color: var(--mud-palette-text-secondary);" />
                    <MudText Typo="Typo.h6" Style="color: var(--mud-palette-text-secondary);">Geen data beschikbaar</MudText>
                </MudStack>
            </NoRecordsContent>
        </MudTable>
    </MudPaper>    <MudPaper Elevation="2" Class="pa-4 mb-6" Style="border-radius: 16px; border-left: 6px solid var(--mud-palette-success);">
        <MudStack Row="true" AlignItems="AlignItems.Center" Spacing="2">
            <MudIcon Icon="@Icons.Material.Filled.Category" Color="Color.Success" Style="font-size: 1.5rem;" />
            <MudText Typo="Typo.h5" Style="font-weight: 600; margin: 0;">Detecties per Afvaltype per Dag</MudText>
        </MudStack>
    </MudPaper>
      <MudPaper Elevation="4" Class="pa-6 mb-8" Style="border-radius: 20px; background: var(--mud-palette-surface);">
        <MudTable Items="@TypePerDayStats" 
                 Dense="false" 
                 Hover="true" 
                 Bordered="false" 
                 Striped="false" 
                 Elevation="0"
                 Loading="_isRefreshing"
                 LoadingProgressColor="Color.Success"
                 Style="border-radius: 12px; overflow: hidden;">
            <LoadingContent>
                <div class="table-loading">
                    <MudProgressCircular Color="Color.Success" Size="Size.Medium" Indeterminate="true" />
                    <MudText Typo="Typo.h6" Class="table-loading-text">Afvaltype data wordt geladen...</MudText>
                    <div class="data-viz-skeleton">
                        <MudSkeleton Width="100%" Height="40px" Animation="Animation.Wave" />
                        <MudSkeleton Width="90%" Height="40px" Animation="Animation.Wave" />
                        <MudSkeleton Width="85%" Height="40px" Animation="Animation.Wave" />
                    </div>
                </div>
            </LoadingContent>
            <HeaderContent>
                <MudTh Style="background: var(--mud-palette-success); color: white; font-weight: 600; padding: 16px;">
                    <MudStack Row="true" AlignItems="AlignItems.Center" Spacing="1">
                        <MudIcon Icon="@Icons.Material.Filled.CalendarToday" Size="Size.Small" />
                        <span>Datum</span>
                    </MudStack>
                </MudTh>
                <MudTh Style="background: var(--mud-palette-success); color: white; font-weight: 600; padding: 16px;">
                    <MudStack Row="true" AlignItems="AlignItems.Center" Spacing="1">
                        <MudIcon Icon="@Icons.Material.Filled.Category" Size="Size.Small" />
                        <span>Type</span>
                    </MudStack>
                </MudTh>
                <MudTh Style="background: var(--mud-palette-success); color: white; font-weight: 600; padding: 16px;">
                    <MudStack Row="true" AlignItems="AlignItems.Center" Spacing="1">
                        <MudIcon Icon="@Icons.Material.Filled.TrendingUp" Size="Size.Small" />
                        <span>Aantal</span>
                    </MudStack>
                </MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Datum" Style="padding: 16px; font-weight: 500;">
                    @context.Date.ToShortDateString()
                </MudTd>
                <MudTd DataLabel="Type" Style="padding: 16px;">
                    <MudChip T="string" Color="Color.Secondary" Variant="Variant.Filled" Size="Size.Small" Style="border-radius: 12px; font-weight: 600;">
                        @context.Type
                    </MudChip>
                </MudTd>
                <MudTd DataLabel="Aantal" Style="padding: 16px;">
                    <MudStack AlignItems="AlignItems.Start" Spacing="2">
                        <MudProgressLinear Color="Color.Success" 
                                         Value="@((double)context.Count / (double)MaxTypeCount * 100)" 
                                         Style="height: 12px; border-radius: 6px; width: 200px;" />
                        <MudChip T="string" Color="Color.Success" Variant="Variant.Filled" Size="Size.Small" Style="font-weight: 600;">
                            @context.Count
                        </MudChip>
                    </MudStack>
                </MudTd>
            </RowTemplate>
            <NoRecordsContent>
                <MudStack AlignItems="AlignItems.Center" Spacing="2" Class="pa-8">
                    <MudIcon Icon="@Icons.Material.Filled.SearchOff" Style="font-size: 3rem; color: var(--mud-palette-text-secondary);" />
                    <MudText Typo="Typo.h6" Style="color: var(--mud-palette-text-secondary);">Geen data beschikbaar</MudText>
                </MudStack>
            </NoRecordsContent>
        </MudTable>
    </MudPaper>    <MudPaper Elevation="2" Class="pa-4 mb-6" Style="border-radius: 16px; border-left: 6px solid var(--mud-palette-tertiary);">
        <MudStack Row="true" AlignItems="AlignItems.Center" Spacing="2">
            <MudIcon Icon="@Icons.Material.Filled.Inventory" Color="Color.Tertiary" Style="font-size: 1.5rem;" />
            <MudText Typo="Typo.h5" Style="font-weight: 600; margin: 0;">Overzicht per Afvaltype</MudText>
        </MudStack>
    </MudPaper>
      <MudPaper Elevation="4" Class="pa-6 mb-8" Style="border-radius: 20px; background: var(--mud-palette-surface);">
        <MudTable Items="@TrashTypeStats" 
                 Dense="false" 
                 Hover="true" 
                 Bordered="false" 
                 Striped="false" 
                 Elevation="0"
                 Loading="_isRefreshing"
                 LoadingProgressColor="Color.Tertiary"
                 Style="border-radius: 12px; overflow: hidden;">
            <LoadingContent>
                <div class="table-loading">
                    <MudProgressCircular Color="Color.Tertiary" Size="Size.Medium" Indeterminate="true" />
                    <MudText Typo="Typo.h6" Class="table-loading-text">Afvaltype statistieken worden geladen...</MudText>
                    <div class="data-viz-skeleton">
                        <MudSkeleton Width="100%" Height="40px" Animation="Animation.Wave" />
                        <MudSkeleton Width="80%" Height="40px" Animation="Animation.Wave" />
                        <MudSkeleton Width="90%" Height="40px" Animation="Animation.Wave" />
                    </div>
                </div>
            </LoadingContent>
            <HeaderContent>
                <MudTh Style="background: var(--mud-palette-tertiary); color: white; font-weight: 600; padding: 16px;">
                    <MudStack Row="true" AlignItems="AlignItems.Center" Spacing="1">
                        <MudIcon Icon="@Icons.Material.Filled.Category" Size="Size.Small" />
                        <span>Type</span>
                    </MudStack>
                </MudTh>
                <MudTh Style="background: var(--mud-palette-tertiary); color: white; font-weight: 600; padding: 16px;">
                    <MudStack Row="true" AlignItems="AlignItems.Center" Spacing="1">
                        <MudIcon Icon="@Icons.Material.Filled.Numbers" Size="Size.Small" />
                        <span>Aantal</span>
                    </MudStack>
                </MudTh>
                <MudTh Style="background: var(--mud-palette-tertiary); color: white; font-weight: 600; padding: 16px;">
                    <MudStack Row="true" AlignItems="AlignItems.Center" Spacing="1">
                        <MudIcon Icon="@Icons.Material.Filled.Psychology" Size="Size.Small" />
                        <span>Gem. Vertrouwen</span>
                    </MudStack>
                </MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Type" Style="padding: 16px;">
                    <MudChip T="string" Color="Color.Primary" Variant="Variant.Filled" Size="Size.Medium" Style="border-radius: 12px; font-weight: 600;">
                        @context.Type
                    </MudChip>
                </MudTd>
                <MudTd DataLabel="Aantal" Style="padding: 16px; font-weight: 600; font-size: 1.1rem;">
                    @context.Count
                </MudTd>
                <MudTd DataLabel="Gem. Vertrouwen" Style="padding: 16px;">
                    <MudStack Row="true" AlignItems="AlignItems.Center" Spacing="2">
                        <MudProgressCircular Color="@GetConfidenceColor(context.AvgConfidence)" 
                                           Value="@((int)(context.AvgConfidence * 100))" 
                                           Size="Size.Small" />
                        <MudText Style="font-weight: 600;">@context.AvgConfidence.ToString("P0")</MudText>
                    </MudStack>
                </MudTd>
            </RowTemplate>
            <NoRecordsContent>
                <MudStack AlignItems="AlignItems.Center" Spacing="2" Class="pa-8">
                    <MudIcon Icon="@Icons.Material.Filled.SearchOff" Style="font-size: 3rem; color: var(--mud-palette-text-secondary);" />
                    <MudText Typo="Typo.h6" Style="color: var(--mud-palette-text-secondary);">Geen data beschikbaar</MudText>
                </MudStack>
            </NoRecordsContent>
        </MudTable>
    </MudPaper>    <MudPaper Elevation="2" Class="pa-4 mb-6" Style="border-radius: 16px; border-left: 6px solid var(--mud-palette-warning);">
        <MudStack Row="true" AlignItems="AlignItems.Center" Spacing="2">
            <MudIcon Icon="@Icons.Material.Filled.LocationOn" Color="Color.Warning" Style="font-size: 1.5rem;" />
            <MudText Typo="Typo.h5" Style="font-weight: 600; margin: 0;">Overzicht per Locatie</MudText>
        </MudStack>
    </MudPaper>
      <MudPaper Elevation="4" Class="pa-6 mb-8" Style="border-radius: 20px; background: var(--mud-palette-surface);">
        <MudTable Items="@LocationStats" 
                 Dense="false" 
                 Hover="true" 
                 Bordered="false" 
                 Striped="false" 
                 Elevation="0"
                 Loading="_isRefreshing"
                 LoadingProgressColor="Color.Warning"
                 Style="border-radius: 12px; overflow: hidden;">
            <LoadingContent>
                <div class="table-loading">
                    <MudProgressCircular Color="Color.Warning" Size="Size.Medium" Indeterminate="true" />
                    <MudText Typo="Typo.h6" Class="table-loading-text">Locatie statistieken worden geladen...</MudText>
                    <div class="data-viz-skeleton">
                        <MudSkeleton Width="100%" Height="40px" Animation="Animation.Wave" />
                        <MudSkeleton Width="85%" Height="40px" Animation="Animation.Wave" />
                        <MudSkeleton Width="90%" Height="40px" Animation="Animation.Wave" />
                    </div>
                </div>
            </LoadingContent>
            <HeaderContent>
                <MudTh Style="background: var(--mud-palette-warning); color: white; font-weight: 600; padding: 16px;">
                    <MudStack Row="true" AlignItems="AlignItems.Center" Spacing="1">
                        <MudIcon Icon="@Icons.Material.Filled.LocationOn" Size="Size.Small" />
                        <span>Locatie</span>
                    </MudStack>
                </MudTh>
                <MudTh Style="background: var(--mud-palette-warning); color: white; font-weight: 600; padding: 16px;">
                    <MudStack Row="true" AlignItems="AlignItems.Center" Spacing="1">
                        <MudIcon Icon="@Icons.Material.Filled.Numbers" Size="Size.Small" />
                        <span>Aantal</span>
                    </MudStack>
                </MudTh>
                <MudTh Style="background: var(--mud-palette-warning); color: white; font-weight: 600; padding: 16px;">
                    <MudStack Row="true" AlignItems="AlignItems.Center" Spacing="1">
                        <MudIcon Icon="@Icons.Material.Filled.Psychology" Size="Size.Small" />
                        <span>Gem. Vertrouwen</span>
                    </MudStack>
                </MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Locatie" Style="padding: 16px;">
                    <MudStack Row="true" AlignItems="AlignItems.Center" Spacing="2">
                        <MudIcon Icon="@Icons.Material.Filled.Place" Color="Color.Warning" Size="Size.Small" />
                        <MudText Style="font-weight: 500;">@context.Location</MudText>
                    </MudStack>
                </MudTd>
                <MudTd DataLabel="Aantal" Style="padding: 16px; font-weight: 600; font-size: 1.1rem;">
                    @context.Count
                </MudTd>
                <MudTd DataLabel="Gem. Vertrouwen" Style="padding: 16px;">
                    <MudStack Row="true" AlignItems="AlignItems.Center" Spacing="2">
                        <MudProgressCircular Color="@GetConfidenceColor(context.AvgConfidence)" 
                                           Value="@((int)(context.AvgConfidence * 100))" 
                                           Size="Size.Small" />
                        <MudText Style="font-weight: 600;">@context.AvgConfidence.ToString("P0")</MudText>
                    </MudStack>
                </MudTd>
            </RowTemplate>
            <NoRecordsContent>
                <MudStack AlignItems="AlignItems.Center" Spacing="2" Class="pa-8">
                    <MudIcon Icon="@Icons.Material.Filled.SearchOff" Style="font-size: 3rem; color: var(--mud-palette-text-secondary);" />
                    <MudText Typo="Typo.h6" Style="color: var(--mud-palette-text-secondary);">Geen data beschikbaar</MudText>
                </MudStack>
            </NoRecordsContent>        </MudTable>
    </MudPaper>
</MudContainer>
}

@code {
    [Inject] public FrontendMonitoring.Services.AfvalApiClient AfvalClient { get; set; } = null!;    private LitterApiResponse? apiData;
    private List<AfvalModel> detections = new();
    private string? weather;
    private bool _isLoading = true;
    private bool _isRefreshing = false;

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }    private async Task LoadData()
    {
        _isLoading = true;
        StateHasChanged();
        
        try
        {
            apiData = await AfvalClient.GetLitterAndWeatherAsync();
            detections = apiData?.Litter ?? new List<AfvalModel>();
            weather = apiData?.Weather;
        }
        catch (Exception)
        {
            // Handle error or fallback to dummy data
            detections = new List<AfvalModel>();
        }
        finally
        {
            _isLoading = false;
            StateHasChanged();
        }
    }    private async Task RefreshData()
    {
        _isRefreshing = true;
        StateHasChanged();
        
        try
        {
            apiData = await AfvalClient.GetLitterAndWeatherAsync();
            detections = apiData?.Litter ?? new List<AfvalModel>();
            weather = apiData?.Weather;
        }
        catch (Exception)
        {
            // Handle error or fallback to dummy data
            detections = new List<AfvalModel>();
        }
        finally
        {
            _isRefreshing = false;
            StateHasChanged();
        }
    }

    private string MostCommonTrashType => detections
        .GroupBy(d => d.TrashType)
        .OrderByDescending(g => g.Count())
        .Select(g => g.Key)
        .FirstOrDefault() ?? "-";

    private string TopLocation => detections
        .GroupBy(d => d.Location)
        .OrderByDescending(g => g.Count())
        .Select(g => g.Key)
        .FirstOrDefault() ?? "-";

    private double AverageConfidence => detections.Count == 0 ? 0 : detections.Average(d => d.Confidence);

    private string ShortLocation => GetStreetName(TopLocation);

    private string GetStreetName(string location)
    {
        if (string.IsNullOrWhiteSpace(location)) return "-";
        // Try to extract the street name (before the first comma)
        var idx = location.IndexOf(',');
        return idx > 0 ? location.Substring(0, idx) : location;
    }

    private IEnumerable<(string Type, int Count, double AvgConfidence)> TrashTypeStats =>
        detections.GroupBy(d => d.TrashType)
            .Select(g => (g.Key ?? "-", g.Count(), g.Average(x => x.Confidence)));

    private IEnumerable<(string Location, int Count, double AvgConfidence)> LocationStats =>
        detections.GroupBy(d => d.Location)
            .Select(g => (g.Key ?? "-", g.Count(), g.Average(x => x.Confidence)));

    private IEnumerable<(DateTime Date, int Count)> DailyStats =>
        detections.Where(d => d.Time.HasValue)
            .GroupBy(d => d.Time.Value.Date)
            .OrderByDescending(g => g.Key)
            .Select(g => (g.Key, g.Count()));

    private IEnumerable<(DateTime Date, double AvgConfidence)> DailyConfidenceStats =>
        detections.Where(d => d.Time.HasValue)
            .GroupBy(d => d.Time.Value.Date)
            .OrderByDescending(g => g.Key)
            .Select(g => (g.Key, g.Average(x => x.Confidence)));

    private IEnumerable<(DateTime Date, string Type, int Count)> TypePerDayStats =>
        detections.Where(d => d.Time.HasValue)
            .GroupBy(d => new { d.Time.Value.Date, d.TrashType })
            .OrderByDescending(g => g.Key.Date)
            .ThenBy(g => g.Key.TrashType)
            .Select(g => (g.Key.Date, g.Key.TrashType ?? "-", g.Count()));

    // Real statistics
    private double CleanupPercentage => detections.Count == 0 ? 0 : detections.Count(d => d.Cleaned) / (double)detections.Count;
    private double AverageResponseTime => detections.Count == 0 ? 0 : detections.Where(d => d.Cleaned && d.Time.HasValue && d.CleanedTime.HasValue).Select(d => (d.CleanedTime.Value - d.Time.Value).TotalHours).DefaultIfEmpty(0).Average();
    private int ActiveZones => detections.Select(d => d.Location).Distinct().Count();    private int MaxDailyCount => DailyStats.Any() ? DailyStats.Max(x => x.Count) : 1;
    private int MaxTypeCount => TypePerDayStats.Any() ? TypePerDayStats.Max(x => x.Count) : 1;

    private Color GetConfidenceColor(double confidence)
    {
        return confidence switch
        {
            >= 0.8 => Color.Success,
            >= 0.6 => Color.Warning,
            _ => Color.Error
        };
    }
}
