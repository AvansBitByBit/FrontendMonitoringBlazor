@page "/statistics"
@using FrontendMonitoring.Models
@using Microsoft.AspNetCore.Components.Web
@using MudBlazor

<PageTitle>Statistieken</PageTitle>

<MudPaper Class="responsive-padding mx-auto fade-in" MaxWidth="800px">
    <MudText Typo="Typo.h3" GutterBottom="true" Class="mb-4 text-responsive-h3">
        <MudIcon Icon="@Icons.Material.Filled.Analytics" Class="mr-2" />
        Afvaldetectie Statistieken
    </MudText>
    <MudText Typo="Typo.body1" Class="mb-6 text-responsive-body">
        Uitgebreide analyses en inzichten van ons AI-aangedreven afvalmonitoringsysteem in Breda.
    </MudText>

    <MudAlert Severity="Severity.Info" Class="mb-4">
        <MudIcon Icon="@Icons.Material.Filled.Info" Class="mr-2" />
        De volgende statistieken zijn gebaseerd op gegevens van de geobserveerde afvaldetecties in Breda. Deze gegevens worden regelmatig bijgewerkt en kunnen variÃ«ren afhankelijk van de laatste meldingen.
    </MudAlert>

    <MudText Typo="Typo.h4" GutterBottom="true" Class="mb-4 text-responsive-h4">Huidige Statistieken</MudText>
    
    <MudGrid Spacing="2" Class="mb-6">
        <MudItem xs="12" sm="6" md="3">
            <MudPaper Elevation="2" Class="responsive-padding card-animate text-center">
                <MudIcon Icon="@Icons.Material.Filled.DeleteSweep" Style="font-size: 2.5rem; color: var(--mud-palette-primary);" Class="mb-2" />
                <MudText Typo="Typo.h4" Class="text-responsive-h4" Style="color: var(--mud-palette-primary);">@detections.Count</MudText>
                <MudText Typo="Typo.subtitle1" Class="text-responsive-body">Totale Detecties</MudText>
                <MudText Typo="Typo.caption" Class="text-responsive-body" Style="color: var(--mud-palette-text-secondary);">Totaal ontvangen</MudText>
            </MudPaper>
        </MudItem>
        <MudItem xs="12" sm="6" md="3">
            <MudPaper Elevation="2" Class="responsive-padding card-animate text-center">
                <MudIcon Icon="@Icons.Material.Filled.BarChart" Style="font-size: 2.5rem; color: var(--mud-palette-success);" Class="mb-2" />
                <MudText Typo="Typo.h4" Class="text-responsive-h4" Style="color: var(--mud-palette-success);">@MostCommonTrashType</MudText>
                <MudText Typo="Typo.subtitle1" Class="text-responsive-body">Meest Voorkomend</MudText>
                <MudText Typo="Typo.caption" Class="text-responsive-body" Style="color: var(--mud-palette-text-secondary);">Afvaltype</MudText>
            </MudPaper>
        </MudItem>
        <MudItem xs="12" sm="12" md="6">
            <MudPaper Elevation="2" Class="responsive-padding card-animate text-center" Style="min-width:320px;">
                <MudIcon Icon="@Icons.Material.Filled.LocationOn" Style="font-size: 2.5rem; color: var(--mud-palette-warning);" Class="mb-2" />
                <MudTooltip Text="@TopLocation">
                    <MudText Typo="Typo.h4" Class="text-responsive-h4" Style="color: var(--mud-palette-warning); white-space: normal; overflow: visible; text-overflow: initial; max-width: 100%; margin: 0 auto;">@ShortLocation</MudText>
                </MudTooltip>
                <MudText Typo="Typo.subtitle1" Class="text-responsive-body">Top Locatie</MudText>
                <MudText Typo="Typo.caption" Class="text-responsive-body" Style="color: var(--mud-palette-text-secondary);">Meeste meldingen</MudText>
            </MudPaper>
        </MudItem>
        <MudItem xs="12" sm="6" md="3">
            <MudPaper Elevation="2" Class="responsive-padding card-animate text-center">
                <MudIcon Icon="@Icons.Material.Filled.Timeline" Style="font-size: 2.5rem; color: var(--mud-palette-info);" Class="mb-2" />
                <MudText Typo="Typo.h4" Class="text-responsive-h4" Style="color: var(--mud-palette-info);">@AverageConfidence.ToString("P0")</MudText>
                <MudText Typo="Typo.subtitle1" Class="text-responsive-body">Gem. Vertrouwen</MudText>
                <MudText Typo="Typo.caption" Class="text-responsive-body" Style="color: var(--mud-palette-text-secondary);">AI Score</MudText>
            </MudPaper>
        </MudItem>
    </MudGrid>

    <MudDivider Class="my-6" />

    <MudText Typo="Typo.h4" GutterBottom="true" Class="mb-4 text-responsive-h4">Detecties per Dag</MudText>
    <MudPaper Elevation="4" Class="responsive-padding mb-6 card-animate mud-theme-background mud-theme-text" Style="border-radius: 16px;">
        <MudTable Items="@DailyStats" Dense="false" Hover="true" Bordered="false" Striped="true" Elevation="2" Class="mud-theme-background mud-theme-text" Style="border-radius: 16px; overflow: hidden;">
            <HeaderContent>
                <MudTh Class="fancy-header">Datum</MudTh>
                <MudTh Class="fancy-header">Aantal</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Datum" Class="fancy-cell">@context.Date.ToShortDateString()</MudTd>
                <MudTd DataLabel="Aantal" Class="fancy-cell">
                    <MudProgressLinear Color="Color.Primary" Value="@((double)context.Count / (double)MaxDailyCount * 100)" Style="height: 8px; border-radius: 4px; margin-bottom: 4px;" Animated="true" />
                    <span class="fancy-count">@context.Count</span>
                </MudTd>
            </RowTemplate>
        </MudTable>
    </MudPaper>

    <MudText Typo="Typo.h4" GutterBottom="true" Class="mb-4 text-responsive-h4">Gemiddelde Vertrouwen per Dag</MudText>
    <MudPaper Elevation="4" Class="responsive-padding mb-6 card-animate mud-theme-background mud-theme-text" Style="border-radius: 16px;">
        <MudTable Items="@DailyConfidenceStats" Dense="false" Hover="true" Bordered="false" Striped="true" Elevation="2" Class="mud-theme-background mud-theme-text" Style="border-radius: 16px; overflow: hidden;">
            <HeaderContent>
                <MudTh Class="fancy-header">Datum</MudTh>
                <MudTh Class="fancy-header">Gem. Vertrouwen</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Datum" Class="fancy-cell">@context.Date.ToShortDateString()</MudTd>
                <MudTd DataLabel="Gem. Vertrouwen" Class="fancy-cell">
                    <MudProgressCircular Color="Color.Info" Value="@((int)(context.AvgConfidence * 100))" Size="Size.Medium" Class="mr-2" Animated="true" />
                    <span class="fancy-confidence">@context.AvgConfidence.ToString("P0")</span>
                </MudTd>
            </RowTemplate>
        </MudTable>
    </MudPaper>

    <MudText Typo="Typo.h4" GutterBottom="true" Class="mb-4 text-responsive-h4">Detecties per Afvaltype per Dag</MudText>
    <MudPaper Elevation="4" Class="responsive-padding mb-6 card-animate mud-theme-background mud-theme-text" Style="border-radius: 16px;">
        <MudTable Items="@TypePerDayStats" Dense="false" Hover="true" Bordered="false" Striped="true" Elevation="2" Class="mud-theme-background mud-theme-text" Style="border-radius: 16px; overflow: hidden;">
            <HeaderContent>
                <MudTh Class="fancy-header">Datum</MudTh>
                <MudTh Class="fancy-header">Type</MudTh>
                <MudTh Class="fancy-header">Aantal</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Datum" Class="fancy-cell">@context.Date.ToShortDateString()</MudTd>
                <MudTd DataLabel="Type" Class="fancy-cell">
                    <MudChip T="string" Color="Color.Secondary" Variant="Variant.Filled" Class="fancy-chip mud-theme-background mud-theme-text">@context.Type</MudChip>
                </MudTd>
                <MudTd DataLabel="Aantal" Class="fancy-cell">
                    <MudProgressLinear Color="Color.Success" Value="@((double)context.Count / (double)MaxTypeCount * 100)" Style="height: 8px; border-radius: 4px; margin-bottom: 4px;" Animated="true" />
                    <span class="fancy-count">@context.Count</span>
                </MudTd>
            </RowTemplate>
        </MudTable>
    </MudPaper>

    <MudDivider Class="my-6" />

    <MudText Typo="Typo.h4" GutterBottom="true" Class="mb-4 text-responsive-h4">Overzicht per Afvaltype</MudText>
    <MudPaper Elevation="2" Class="responsive-padding mb-6 card-animate" Style="background-color: var(--mud-palette-background-paper); border-radius: 16px;">
        <MudTable Items="@TrashTypeStats" Dense="true" Hover="true" Bordered="true" Striped="true" Class="modern-theme-table" Style="border-radius: 16px;">
            <HeaderContent>
                <MudTh Class="modern-header">Type</MudTh>
                <MudTh Class="modern-header">Aantal</MudTh>
                <MudTh Class="modern-header">Gem. Vertrouwen</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Type" Class="modern-cell">
                    <MudChip T="string" Color="Color.Primary" Variant="Variant.Filled" Class="modern-chip">@context.Type</MudChip>
                </MudTd>
                <MudTd DataLabel="Aantal" Class="modern-cell">@context.Count</MudTd>
                <MudTd DataLabel="Gem. Vertrouwen" Class="modern-cell">@context.AvgConfidence.ToString("P0")</MudTd>
            </RowTemplate>
        </MudTable>
    </MudPaper>

    <MudDivider Class="my-6" />

    <MudText Typo="Typo.h4" GutterBottom="true" Class="mb-4 text-responsive-h4">Overzicht per Locatie</MudText>
    <MudPaper Elevation="2" Class="responsive-padding mb-6 card-animate" Style="background-color: var(--mud-palette-background-paper); border-radius: 16px;">
        <MudTable Items="@LocationStats" Dense="true" Hover="true" Bordered="true" Striped="true" Class="modern-theme-table" Style="border-radius: 16px;">
            <HeaderContent>
                <MudTh Class="modern-header">Locatie</MudTh>
                <MudTh Class="modern-header">Aantal</MudTh>
                <MudTh Class="modern-header">Gem. Vertrouwen</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Locatie" Class="modern-cell">
                    <MudIcon Icon="@Icons.Material.Filled.LocationOn" Style="font-size: 1.1rem; color: var(--mud-palette-warning); margin-right: 6px; vertical-align: middle;" />
                    <span style="vertical-align: middle;">@context.Location</span>
                </MudTd>
                <MudTd DataLabel="Aantal" Class="modern-cell">@context.Count</MudTd>
                <MudTd DataLabel="Gem. Vertrouwen" Class="modern-cell">@context.AvgConfidence.ToString("P0")</MudTd>
            </RowTemplate>
        </MudTable>
    </MudPaper>
</MudPaper>

@code {
    [Inject] public FrontendMonitoring.Services.AfvalApiClient AfvalClient { get; set; }
    private LitterApiResponse? apiData;
    private List<AfvalModel> detections = new();
    private WeatherModel? weather;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            apiData = await AfvalClient.GetLitterAndWeatherAsync();
            detections = apiData?.Litter ?? new List<AfvalModel>();
            weather = apiData?.Weather;
        }
        catch (Exception ex)
        {
            // Handle error or fallback to dummy data
            detections = new List<AfvalModel>();
        }
    }

    private string MostCommonTrashType => detections
        .GroupBy(d => d.TrashType)
        .OrderByDescending(g => g.Count())
        .Select(g => g.Key)
        .FirstOrDefault() ?? "-";

    private string TopLocation => detections
        .GroupBy(d => d.Location)
        .OrderByDescending(g => g.Count())
        .Select(g => g.Key)
        .FirstOrDefault() ?? "-";

    private double AverageConfidence => detections.Count == 0 ? 0 : detections.Average(d => d.Confidence);

    private string ShortLocation => GetStreetName(TopLocation);

    private string GetStreetName(string location)
    {
        if (string.IsNullOrWhiteSpace(location)) return "-";
        // Try to extract the street name (before the first comma)
        var idx = location.IndexOf(',');
        return idx > 0 ? location.Substring(0, idx) : location;
    }

    private IEnumerable<(string Type, int Count, double AvgConfidence)> TrashTypeStats =>
        detections.GroupBy(d => d.TrashType)
            .Select(g => (g.Key ?? "-", g.Count(), g.Average(x => x.Confidence)));

    private IEnumerable<(string Location, int Count, double AvgConfidence)> LocationStats =>
        detections.GroupBy(d => d.Location)
            .Select(g => (g.Key ?? "-", g.Count(), g.Average(x => x.Confidence)));

    private IEnumerable<(DateTime Date, int Count)> DailyStats =>
        detections.Where(d => d.Time.HasValue)
            .GroupBy(d => d.Time.Value.Date)
            .OrderByDescending(g => g.Key)
            .Select(g => (g.Key, g.Count()));

    private IEnumerable<(DateTime Date, double AvgConfidence)> DailyConfidenceStats =>
        detections.Where(d => d.Time.HasValue)
            .GroupBy(d => d.Time.Value.Date)
            .OrderByDescending(g => g.Key)
            .Select(g => (g.Key, g.Average(x => x.Confidence)));

    private IEnumerable<(DateTime Date, string Type, int Count)> TypePerDayStats =>
        detections.Where(d => d.Time.HasValue)
            .GroupBy(d => new { d.Time.Value.Date, d.TrashType })
            .OrderByDescending(g => g.Key.Date)
            .ThenBy(g => g.Key.TrashType)
            .Select(g => (g.Key.Date, g.Key.TrashType ?? "-", g.Count()));

    // Real statistics
    private double CleanupPercentage => detections.Count == 0 ? 0 : detections.Count(d => d.Cleaned) / (double)detections.Count;
    private double AverageResponseTime => detections.Count == 0 ? 0 : detections.Where(d => d.Cleaned && d.Time.HasValue && d.CleanedTime.HasValue).Select(d => (d.CleanedTime.Value - d.Time.Value).TotalHours).DefaultIfEmpty(0).Average();
    private int ActiveZones => detections.Select(d => d.Location).Distinct().Count();

    private int MaxDailyCount => DailyStats.Any() ? DailyStats.Max(x => x.Count) : 1;
    private int MaxTypeCount => TypePerDayStats.Any() ? TypePerDayStats.Max(x => x.Count) : 1;
}
