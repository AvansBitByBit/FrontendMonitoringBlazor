name: Build, Test and Deploy Blazor/WebAPI to Azure App Service

env:
  DOTNET_CORE_VERSION: 9.0.x
  PUBLISH_DIRECTORY: "./out/publish"
  ARTIFACT_NAME: WebApp

on:
  push:
    branches:
      - main
      - deployment
      - master

  workflow_dispatch:

jobs:
  check-secrets:
    runs-on: ubuntu-latest
    steps:
      - name: Check required secrets
        run: |
          if [ -z "${{ secrets.AZURE_CLIENT_ID }}" ]; then
            echo "❌ Secret 'AZURE_CLIENT_ID' is missing!"
            exit 1
          fi
          if [ -z "${{ secrets.AZURE_TENANT_ID }}" ]; then
            echo "❌ Secret 'AZURE_TENANT_ID' is missing!"
            exit 1
          fi
          if [ -z "${{ secrets.AZURE_SUBSCRIPTION_ID }}" ]; then
            echo "❌ Secret 'AZURE_SUBSCRIPTION_ID' is missing!"
            exit 1
          fi
          if [ -z "${{ secrets.AZURE_CLIENT_SECRET }}" ]; then
            echo "❌ Secret 'AZURE_CLIENT_SECRET' is missing!"
            exit 1
          fi
          if [ -z "${{ secrets.WEBAPI_PROJECT_NAME }}" ]; then
            echo "❌ Secret 'WEBAPI_PROJECT_NAME' is missing!"
            exit 1
          fi
          if [ -z "${{ secrets.AZURE_WEBAPP_NAME }}" ]; then
            echo "❌ Secret 'AZURE_WEBAPP_NAME' is missing!"
            exit 1
          fi

  build:
    runs-on: ubuntu-latest
    needs: check-secrets
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_CORE_VERSION }}

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore

      - name: Test
        run: dotnet test --no-build --verbosity normal

      - name: Publish
        run: dotnet publish ./${{ secrets.WEBAPI_PROJECT_NAME }} --configuration Release --output ${{ env.PUBLISH_DIRECTORY }}

      - name: Upload publish artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.PUBLISH_DIRECTORY }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: Production
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.PUBLISH_DIRECTORY }}

      - name: Azure Login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ secrets.AZURE_WEBAPP_NAME }}
          slot-name: Production
          package: ${{ env.PUBLISH_DIRECTORY }}
        